ΤΙ ΜΕΝΕΙ ΓΙΑ WEB




- Stored procedure στη βαση για να τσεκαρει αν η ακτινα αποστασης του χρηστη που υποβαλει τη προσφορα, ειναι μικροτερη του 50 μεσω συναρτησης ριζας lat² και lon²
- Stored procedure στη βαση για να τσεκαρει οτι μια νεα προσφορα εχει 20% μικροτερη τιμη απο αυτη που υπαρχει ηδη


1) Να προστεθει αν υπαρχουν προσφορες στον πινακα shops, ωστε να ελεγχεται μεσω php αν ενα καταστημα εχει προσφορα και να μπαινει διαφορετικο μαρκερ.
2) Trigger για οταν μπαινει μια νεα προσφορα απο καποιον χρηστη, να ενημερωνεται το πεδιο discounts του user.
3) Δεν υπαρχει νοημα να φτιαχτει stored procedure για τα μαγαζια που εισαι κοντα γιατι ελεγχεται απο php αυτο και δε μπορει να καλειται συνεχεια.


ΠΑΡΑΔΟΧΕΣ


- Τα json αρχεια εχουν υποστει επεξεργασια για να μπουν στη βαση μας
- Τα shops εχουν ολα διαφορετικη ονομασια και οσα εχουν ιδιο ονομα, εχουν αριθμηση για να γινεται το search σωστα
- Τα subcategory μπηκαν χειροκινητα
- Η αποσταση για υποβολη προσφορας αντι για 50 μετρα ειναι 1000 μετρα λογω των περιοχων που ζουμε(δεν εχει πολλα supermarket κοντα)


==========================================================================================================================================================================

DELIMITER $

CREATE TRIGGER update_shop_offers
AFTER INSERT ON offer
FOR EACH ROW
BEGIN
    UPDATE shop
    SET offers = 1
    WHERE shop_id = NEW.shop_id;
END;
$

DELIMITER ;


==========================================================================================================================================================================

DELIMITER $

CREATE TRIGGER update_shop_offers_on_delete
AFTER DELETE ON offer
FOR EACH ROW
BEGIN
    DECLARE shop_offer_count INT;
    SET shop_offer_count = (SELECT COUNT(*) FROM offer WHERE shop_id = OLD.shop_id);
    
    IF shop_offer_count = 0 THEN
        UPDATE shop
        SET offers = 0
        WHERE shop_id = OLD.shop_id;
    END IF;
END;
$

DELIMITER ;


==========================================================================================================================================================================

DELIMITER $

CREATE TRIGGER likes_add_tokens
AFTER UPDATE ON OFFER
FOR EACH ROW 
BEGIN
UPDATE USER
SET total_tokens = total_tokens + 5
WHERE (NEW.likes = OLD.likes + 1 AND USER.user_username = NEW.user_username);
END$

DELIMITER ;


==========================================================================================================================================================================

DELIMITER $
CREATE TRIGGER dislikes_subtracts_tokens
AFTER UPDATE ON OFFER
FOR EACH ROW 
BEGIN
UPDATE USER
SET total_tokens = total_tokens - 1
WHERE (NEW.dislikes = OLD.dislikes + 1 AND USER.user_username = NEW.user_username); 
END$
DELIMITER ;



